//@version=5
strategy(title = "INVERSE RSI", overlay=true, initial_capital = 1000000, default_qty_value = 100
  , default_qty_type = strategy.percent_of_equity)

SessionLow(sessionTime, sessionTimeZone=syminfo.timezone) =>
    insideSession = not na(time(timeframe.period, sessionTime, sessionTimeZone))
    var float sessionLowPrice = na

    if insideSession and not insideSession[1]
        sessionLowPrice := low
    else if insideSession
        sessionLowPrice := math.min(sessionLowPrice, low)
    
    sessionLowPrice

SessionHigh(sessionTime, sessionTimeZone=syminfo.timezone) =>
    insideSession = not na(time(timeframe.period, sessionTime, sessionTimeZone))
    var float sessionHighPrice = na

    if insideSession and not insideSession[1]
        sessionHighPrice := high
    else if insideSession
        sessionHighPrice := math.max(sessionHighPrice, high)
    
    sessionHighPrice

InSession(sessionTimes, sessionTimeZone=syminfo.timezone) =>
    not na(time(timeframe.period, sessionTimes, sessionTimeZone))


// RSI Settings
rsiLength = input(14, title="RSI Length")
overboughtLevel = input(70, title="Overbought Level")
oversoldLevel = input(30, title="Oversold Level")

// Calculate RSI
rsiValue = ta.rsi(close, rsiLength)

// Configure session with inputs
session  = input.session("0345-0405", title="Trading Session")
timeZone = input.string("GMT", title="Time Zone")

// Get the session low
sessLow = SessionLow(session, timeZone)

// Get the session high
sessHigh = SessionHigh(session, timeZone)

// check if the current candle bullish hai
isBullish() =>
    close > open

// Function to check if the current candle is bearish
isBearish() =>
    close < open

var rsiConditionShort = false // initialize 

if rsiValue < overboughtLevel and rsiValue[1] > overboughtLevel  // Check for overbought condition

    rsiConditionShort := true

// buy condition with RSI in bearish market 

goShortCondition1 = isBearish() and close < sessLow and time <= timestamp(syminfo.timezone, year, month, dayofmonth, 13, 00) and rsiConditionShort // Inverse: Check for bearish condition

timePeriod = time >= timestamp(syminfo.timezone, 2023, 01, 01, 09, 15, 0)

endTradingTime = time >= timestamp(syminfo.timezone, year, month, dayofmonth, 15, 10)

closePosition = (isBullish() and close > sessHigh) //  Check for bullish condition

if (rsiValue > overboughtLevel and rsiValue[1] < overboughtLevel) or endTradingTime // Check for oversold condition
    rsiConditionShort := false

notInTrade = strategy.position_size <= 0 // no previous trades taken 

// Limit trading to 1 trade per day
strategy.risk.max_intraday_filled_orders(count=2)

if (goShortCondition1 and timePeriod and notInTrade)
    stopLoss = sessHigh //  session high = stop loss - 70 cross hua to exit 
    takeProfit = low * 0.98 // indrazith book
    strategy.entry("short", strategy.long) // short ki long??

if (closePosition or endTradingTime or rsiValue > overboughtLevel) // close when 3:15 or is bullish (close> sesshigh) or 70 se upar rsi
    strategy.close("short")

// Show the session low on the chart
plot(sessLow, color=color.red, title="Session Low")

// Show the session high on the chart
plot(sessHigh, color=color.green, title="Session High")
